#!/bin/bash

#
# Copy all the source files to a fresh directory.
#

cd win32
if test -d build ; then rm -rf build ; fi
mkdir build
cd build

mkdir oshw-sdl
ln -s oshw-sdl oshw
mkdir res
mkdir data
mkdir sets
mkdir docs
for f in `cat ../../MANIFEST` ; do cp -a ../../$f ./$f ; done
for f in `cat ../BUILDFILES` ; do cp -a ../$f ./$f ; done

#
# Build the Windows binary.
#

sh ./cross-configure.sh --with-win32
sh ./cross-make.sh tworld.exe

#
# Update the documentation.
#

html2txt < ../../README.html > README.txt
html2txt < ../INSTALL.html > INSTALL.txt
html2txt < ../../BUGS.html > BUGS.txt
html2txt < ../../Changelog.html > Changelog.txt
mv COPYING COPYING.txt
mv -i docs/*.html .

#
# The list of files to include.
#

TXTFILES="README.txt INSTALL.txt Changelog.txt BUGS.txt COPYING.txt \
          README-SDL.txt tworld.html sets/*.dac res/rc"
BINFILES="tworld.exe SDL.dll mklynxcc.com res/*.bmp res/*.wav data/intro.dat"

#
# Get the current version ID.
#

VER=`sed -e 's/^.*"\(.*\)".*$/\1/' < ver.h`

#
# Create the main distribution.
#

zip -9    tworld-$VER-win32.zip $BINFILES
zip -9 -l tworld-$VER-win32.zip $TXTFILES
cat ../unzipsfx.exe tworld-$VER-win32.zip > tworld-$VER-win32.exe
zip -A tworld-$VER-win32.exe

#
# Create the CCLP2-enabled version.
#

zip -9    tworld-$VER-win32-CCLP2.zip $BINFILES data/CCLP2.dat *.gif
zip -9 -l tworld-$VER-win32-CCLP2.zip $TXTFILES CCLP2.html CCLP2-disclaimer.txt
cat ../unzipsfx.exe tworld-$VER-win32-CCLP2.zip > tworld-$VER-win32-CCLP2.exe
zip -A tworld-$VER-win32-CCLP2.exe

#
# Copy the zipfiles to the starting directory and clean up.
#

mv tworld-$VER-win32.zip tworld-$VER-win32.exe ../..
mv tworld-$VER-win32-CCLP2.zip tworld-$VER-win32-CCLP2.exe ../..
cd ..
rm -rf build
cd ..
